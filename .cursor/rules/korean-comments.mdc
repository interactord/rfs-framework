---
description: 한글 주석 작성 규칙
globs:
  - "**/*.py"
  - "**/*.js"
  - "**/*.ts"
  - "**/*.jsx"
  - "**/*.tsx"
  - "**/*.sh"
  - "**/*.yaml"
  - "**/*.yml"
  - "**/*.json"
alwaysApply: true
---

# 한글 주석 작성 규칙

이 프로젝트의 모든 코드 주석은 한글로 작성합니다.

## 기본 원칙

1. **모든 주석은 한글로 작성**
   - 코드 내 주석, 문서화 문자열(docstring), TODO 주석 등 모두 한글 사용
   - 기술 용어는 영문 그대로 사용 가능 (예: API, HTTP, JSON 등)

2. **명확하고 간결한 표현 사용**
   - 불필요한 설명은 제거
   - 코드가 명확한 경우 주석 생략 가능
   - 복잡한 로직이나 비즈니스 규칙은 상세히 설명

## 파일별 주석 규칙

### Python 파일 (.py)
```python
# 단일 라인 주석은 이렇게 작성합니다

"""
모듈 레벨 독스트링:
이 모듈의 목적과 주요 기능을 설명합니다.
"""

class MyClass:
    """클래스 설명을 여기에 작성합니다."""
    
    def my_method(self):
        """
        메서드 설명을 작성합니다.
        
        Args:
            param1: 파라미터 설명
            
        Returns:
            반환값 설명
        """
        pass
```

### JavaScript/TypeScript 파일 (.js, .ts, .jsx, .tsx)
```javascript
// 단일 라인 주석은 이렇게 작성합니다

/**
 * 함수나 클래스 설명은 JSDoc 스타일로 작성합니다
 * @param {string} name - 파라미터 설명
 * @returns {string} 반환값 설명
 */
function myFunction(name) {
    // 함수 내부 로직 설명
    return name;
}

/* 
 * 여러 줄 주석은
 * 이렇게 작성합니다
 */
```

### Shell 스크립트 파일 (.sh)
```bash
#!/bin/bash
# 스크립트 목적 설명

# 변수 설명
VARIABLE="value"

# 함수 설명
function my_function() {
    # 함수 로직 설명
    echo "Hello"
}
```

### YAML/JSON 파일 (.yaml, .yml, .json)
```yaml
# YAML 파일의 경우
# 설정 항목에 대한 설명

# 데이터베이스 설정
database:
  host: localhost  # 호스트 주소
  port: 5432      # 포트 번호
```

## 주석 작성 예시

### 좋은 예시
```python
# 사용자 인증 토큰 검증
def validate_token(token):
    """
    JWT 토큰의 유효성을 검증합니다.
    
    Args:
        token: 검증할 JWT 토큰 문자열
        
    Returns:
        bool: 토큰이 유효하면 True, 아니면 False
        
    Raises:
        TokenExpiredError: 토큰이 만료된 경우
    """
    # 토큰 디코딩 및 서명 검증
    try:
        payload = jwt.decode(token, SECRET_KEY)
        # 만료 시간 확인
        if payload['exp'] < time.time():
            raise TokenExpiredError("토큰이 만료되었습니다")
        return True
    except jwt.InvalidTokenError:
        return False
```

### 나쁜 예시
```python
# This function validates token  (영문 주석 사용 X)
def validate_token(token):
    """Validates JWT token"""  # 영문 독스트링 사용 X
    # 토큰 검증  (너무 간략한 설명)
    return jwt.decode(token, SECRET_KEY)
```

## 특수한 경우

1. **외부 라이브러리 오버라이드**
   - 외부 라이브러리의 메서드를 오버라이드하는 경우, 원본 주석을 한글로 번역

2. **자동 생성 코드**
   - 자동 생성된 코드의 경우 주석 번역 제외 가능
   - 단, 파일 상단에 자동 생성됨을 명시

3. **API 엔드포인트 문서**
   - OpenAPI/Swagger 문서는 한글로 작성
   - 단, API 경로나 파라미터 이름은 영문 유지

## 적용 방법

1. 새로운 코드 작성 시 처음부터 한글 주석 사용
2. 기존 코드 수정 시 해당 부분의 영문 주석을 한글로 변경
3. 코드 리뷰 시 한글 주석 규칙 준수 여부 확인

## 예외 사항

- 오픈소스 공개를 위한 코드는 영문 주석 허용
- 외부 협업이 필요한 모듈은 사전 협의 후 영문 주석 허용